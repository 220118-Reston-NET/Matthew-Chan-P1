using System.Data.SqlClient;

namespace ShopDL{
    public class ProductRepo:ICRUDRepository<Product>
    {
        private readonly string _connectionStrings; 
        public ProductRepo(string s_connectionString){
            _connectionStrings = s_connectionString;
        }
        public Product Add(Product p_product){
            string sqlQuery = @"insert into product 
                            values(@prodName, @prodPrice, @prodDesc, @prodAgeRestriction)";

            using (SqlConnection con = new SqlConnection(_connectionStrings))
            {
                //Opens the connection to the database
                con.Open();


                SqlCommand command = new SqlCommand(sqlQuery, con);
                command.Parameters.AddWithValue("@prodName", p_product.Name);
                command.Parameters.AddWithValue("@prodPrice", p_product.Price);
                command.Parameters.AddWithValue("@prodDesc", p_product.Desc);
                command.Parameters.AddWithValue("@prodAgeRestriction", p_product.Age_Restriction);
 
                //Executes the SQL statement
                command.ExecuteNonQuery();
            }

            // possibly adjust product id to match autogenerated id???

            return p_product;
        }
        public List<Product> GetAll(){
            List<Product> listOfProducts = new List<Product>();

            string sqlQuery = @"select * from Inventory 
                                Inner Join Product p ON i.prodId = p.prodId";
            using (SqlConnection con = new SqlConnection(_connectionStrings))
            {
                con.Open();
                SqlCommand command = new SqlCommand(sqlQuery, con);
                SqlDataReader reader = command.ExecuteReader();
                while (reader.Read())
                {
                    listOfProducts.Add(new Product(reader.GetInt32(0), reader.GetString(1), reader.GetInt32(2), reader.GetString(3), reader.GetInt32(4))); 
                }   
            }
            return listOfProducts;
        }
        
        public Product Update(Product p_product){
            throw new NotImplementedException();
        }
        public Product Delete(Product p_product){
            throw new NotImplementedException();
        }

    }
}

