



# YML is another markup language that is sentitive to "spaces" so careful where you tab your keywords
# In this case, we are telling the Github server should do to be able to deploy our api
name: Build, Test, and Deploy API

# We specify when should this action should execute depending on what is happening on your remote repository
on:
  # This is stating it will trigger if a push happens on main
  push:
    branches: [ main ]
  # This is stating it will trigger on pull request
  pull_request:
    branches: [ main ]
  
# Jobs are just mutliple things you might want to do in this computer/server
# Right now we only have one job which is to deploy
jobs:

  # This is where we state a bunch of configuration
  build:
    runs-on: windows-latest # We are stating that the github server/computer will run on the Linux OS
    environment:
      name: 'Production'
    defaults:
      run:
        working-directory: P1/Shop Using SQL/ShopApi/ # This might differ depending on where your project/app is in your remote repo
    
    # Steps are just the sequence of things that this computer/server needs to run to complete a job
    steps:
    
    # We want this computer to have our SDK to even build, test, and deploy
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
              
    # Restore dependencies in our .NET application
    # Essentially, we will get all the external packages we install (ex: System.Data.SqlClient)
    - name: Restore dependencies
      run: dotnet restore
      
    # We are creating our publish folder for us to use
    - name: Create Publish folder
      run: dotnet publish -c Release -o publish
      
    # Deploying our app to our Azure Webapp
    - name: Deploy
      uses: azure/webapps-deploy@v2
      with:
        app-name: ShopDemo
        slot-name: 'Production'
        publish-profile: $${{secrets.AZURE_WEBAPP_PUBLISH_PROFILE}}
        package: P1/Shop Using SQL/ShopApi/
