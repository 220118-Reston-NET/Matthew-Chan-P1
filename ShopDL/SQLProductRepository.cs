using System.Data.SqlClient;
using ShopModel;

namespace ShopDL
{
    
    
    
    
        
    public class SQLProductRepository : IProductRepository {
        private readonly string _connectionStrings;
        public SQLProductRepository(string p_connectionStrings)
        {
            _connectionStrings = p_connectionStrings;
        }

        public Product AddProduct(Product p_product)
        {
            //@ before the string will ignore special characters like \n
            //This is where you specify the sql statement required to do whatever operation you need based on the method
            //
            string sqlQuery = @"insert into product 
                            values(@prodName, @prodPrice, @prodDesc, @prodAgeRestriction)";

            //using block is different from our normal using statement
            //It is used to automatically close any resource you stated inside of the parenthesis
            //If an exception occurs, it will still automatically close any resources
            using (SqlConnection con = new SqlConnection(_connectionStrings))
            {
                //Opens the connection to the database
                con.Open();


                SqlCommand command = new SqlCommand(sqlQuery, con);
                command.Parameters.AddWithValue("@prodName", p_product.Name);
                command.Parameters.AddWithValue("@prodPrice", p_product.Price);
                command.Parameters.AddWithValue("@prodDesc", p_product.Desc);
                command.Parameters.AddWithValue("@prodAgeRestriction", p_product.Age_Restriction);
 
                //Executes the SQL statement
                command.ExecuteNonQuery();
            }

            // possibly adjust product id to match autogenerated id???

            return p_product;
        }

        public List<Product> GetAllProducts(){
            List<Product> listOfProducts = new List<Product>();

            string sqlQuery = @"select * from Inventory 
                                Inner Join Product p ON i.prodId = p.prodId";
            using (SqlConnection con = new SqlConnection(_connectionStrings))
            {
                con.Open();
                SqlCommand command = new SqlCommand(sqlQuery, con);
                SqlDataReader reader = command.ExecuteReader();
                while (reader.Read())
                {
                    listOfProducts.Add(new Product(reader.GetInt32(0), reader.GetString(1), reader.GetInt32(2), reader.GetString(3), reader.GetInt32(4))); 
                }   
            }
            return listOfProducts;
        }

        public Product ProductIdToProduct(int prodId){ 
            string sqlQuery = @"select * from Product p
                            WHERE p.prodId = @productId";
            Product prod = new Product();
            using (SqlConnection con = new SqlConnection(_connectionStrings))
            {
                con.Open();
                SqlCommand command = new SqlCommand(sqlQuery, con);
                command.Parameters.AddWithValue("@productId", prodId);
                SqlDataReader reader = command.ExecuteReader();
                while (reader.Read())
                {
                    prod = new Product(reader.GetInt32(0), reader.GetString(1), reader.GetInt32(2), reader.GetString(3), reader.GetInt32(4)); 
                }   
            }
            return prod;
        }

    } 

}
